{"version":3,"sources":["components/ListAccounts/Item.jsx","components/ListAccounts/Product.jsx","components/ListAccounts/Category.jsx","components/Footer/Footer.jsx","App/App.jsx","serviceWorker.js","firebase.js","components/Auth/Register.jsx","components/Auth/Login.jsx","components/Header/Navbar.jsx","components/Detail/Detail.jsx","index.js"],"names":["Item","_this$props","this","props","dichvus","apiURL","react_default","a","createElement","Fragment","map","item","className","key","_id","Link","to","concat","src","image","url","alt","name","expired","stock","Component","process","API_URL","strapi","Strapi","Product","state","searchTerm","isLoading","isItemLoading","handleChange","e","_this","setState","target","value","setTimeout","filterBrands","_ref","filter","brand","toLowerCase","includes","request","data","query","response","Input","size","icon","loading","placeholder","onChange","react_spinners","color","margin","ListAccounts_Item","Category","ListAccounts_Product","Footer","App","ListAccounts_Category","components_Footer_Footer","Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Register","username","email","password","repassword","errors","isSuccess","usersRefs","database","ref","Object","defineProperty","handleSunmit","preventDefault","isFormValid","auth","createUserWithEmailAndPassword","then","createdUser","user","updateProfile","displayName","saveUser","console","log","catch","err","child","uid","set","isFormEmpty","message","isPasswordInvalid","length","_this$state","Grid","verticalAlign","textAlign","Column","style","maxWidth","Header","as","Icon","Message","content","Segment","Form","onSubmit","iconPosition","type","index","Button","fluid","disabled","warning","Login","isloading","error","signInWithEmailAndPassword","Navbar","handleLogout","signOut","NavLink","Dropdown","text","Menu","onClick","Detail","dichvu","details","params","id","_context","t0","_this2","detail","price","description","Root","components_Header_Navbar","Switch","Route","exact","component","path","React","RootWithAuth","withRouter","ReactDOM","render","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4448ef21.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Item extends Component {\n\n    render() {\n        const { dichvus, apiURL } = this.props\n        return (\n            <React.Fragment>\n                {dichvus.map(item => (\n                    <div className=\"item\" key={item._id}>\n                        <Link to={`/${item._id}`}><img src={`${apiURL}${item.image.url}`} alt=\"\" /></Link>\n                        <div className=\"info-account\">\n                            <h1 className=\"ttl\"><Link to={`/${item._id}`}>{item.name}</Link></h1>\n                            <span className=\"date\">Hạn: {item.expired}</span>\n                            <div className=\"acc-bot\">\n                                <button className=\"buy\">Mua</button>\n                                <span className=\"stock\">Còn lại: {item.stock}</span>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Item;\n","import React, { Component } from 'react'\nimport Item from './Item';\nimport { Input} from 'semantic-ui-react'\nimport Strapi from 'strapi-sdk-javascript/build/main'\nimport { GridLoader } from 'react-spinners'  \n\nconst apiURL = process.env.API_URL || \"http://localhost:1337\"\nconst strapi = new Strapi(apiURL)\n\nclass Product extends Component {\n    state = {\n        searchTerm: '',\n        isLoading : false,\n        dichvus: [],\n        isItemLoading : false\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            searchTerm : e.target.value,\n            isLoading : true\n        })\n        setTimeout(() => {\n            this.setState({\n                isLoading : false\n            })\n        }, 500);\n    }\n\n\n    filterBrands = ({ searchTerm , dichvus}) => {\n        return dichvus.filter(brand => {\n            return brand.name.toLowerCase().includes(searchTerm.toLowerCase())\n        })\n    }\n\n    componentWillMount(){\n        this.setState({isItemLoading : true})\n    }\n\n    async componentDidMount() {\n        try{\n            const response = await strapi.request('POST', '/graphql', {\n                data: {\n                    query: `\n                    query {\n                        dichvus {\n                          _id\n                          name\n                          description\n                          expired\n                          stock\n                          image {\n                            _id\n                            mime\n                            url\n                          }\n                        }\n                      }\n                     `\n                }\n            })\n            this.setState({\n                dichvus: response.data.dichvus,\n                isItemLoading : false\n            })\n        }catch(err){\n            // console.error(err)\n            this.setState({isItemLoading : true})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"content\">\n                <div className=\"title f-between\">\n                    <h1>Danh Sách Tài Khoản ...</h1>\n                    <Input size='tiny' icon='search' loading={this.state.isLoading} placeholder='Search...' value={this.state.searchTerm} onChange={this.handleChange}/>\n                </div>\n                <div className=\"list-accounts\">\n                    {!this.state.isItemLoading ? <Item dichvus={this.filterBrands(this.state)} apiURL={apiURL}/> : <GridLoader className='loader' color='#4CAF50' size={25} margin=\"3px\" />}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Product","import React, { Component } from 'react'\nimport Product from './Product';\n\nclass Category extends Component {\n  render() {\n    return (\n      <div>\n        <Product />\n      </div>\n    )\n  }\n}\n\nexport default Category\n","import React, { Component } from 'react'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <strong>@ I just write this text to let you know that, this's the footer!</strong>\n            </footer>\n        )\n    }\n}\n\nexport default Footer\n","import React, { Component } from 'react';\nimport './App.css';\nimport Category from '../components/ListAccounts/Category';\nimport Footer from '../components/Footer/Footer';\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Category />\n        </div>\n        <Footer />\n      </div>\n\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/storage'\n\n\n  var config = {\n    apiKey: \"AIzaSyAIoEjU91o6B9Q_qrq9z4TxwKGZBkwGQLA\",\n    authDomain: \"shopacc-c6b3d.firebaseapp.com\",\n    databaseURL: \"https://shopacc-c6b3d.firebaseio.com\",\n    projectId: \"shopacc-c6b3d\",\n    storageBucket: \"shopacc-c6b3d.appspot.com\",\n    messagingSenderId: \"265625106322\"\n  };\n  firebase.initializeApp(config);\n\n  export default firebase;","import React, { Component } from 'react'\nimport { Grid, Header, Message, Segment, Icon, Form, Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport firebase from '../../firebase'\nclass Register extends Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        repassword: '',\n        errors: [],\n        isSuccess: false,\n        usersRefs : firebase.database().ref(\"users\"),\n        isLoading: false\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleSunmit = (e) => {\n        e.preventDefault()\n        if (this.isFormValid()) {\n            this.setState({ isLoading: true })\n            firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(createdUser => {\n                createdUser.user.updateProfile({\n                    displayName: this.state.displayName\n                }).then(() => { this.saveUser(createdUser) }).then(() => console.log(createdUser))\n                this.setState({\n                    username: '',\n                    email: '',\n                    password: '',\n                    repassword: '',\n                    errors: [],\n                    isSuccess: true,\n                    isLoading: false\n                })\n            }).catch(err => {\n                this.setState({\n                    errors: this.state.errors.concat(err),\n                    isLoading: false\n                })\n            })\n\n        }\n    }\n    // handleSunmit = (e) => {\n    //     e.preventDefault()\n\n    //     if (this.isFormValid()) {\n    //         this.setState({isLoading : true})\n    //         firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(createdUser => {\n    //             createdUser.user.updateProfile({\n    //                 displayName : this.state.username,\n    //                 photoURL : `http://www.gravatar.com/avatar/${md5(createdUser.user.email)}?d=identicon`\n    //             }).then(() => {this.saveUser(createdUser)}).then(() => console.log(createdUser))\n    //             this.setState({\n    //                 username: '',\n    //                 email: '',\n    //                 password: '',\n    //                 repassword: '',\n    //                 errors: [],\n    //                 isSuccess : true,\n\n    //             })\n    //         }).catch(err => {\n    //             this.setState({\n    //                 errors : this.state.errors.concat(err),\n    //                 isLoading : false\n    //             })\n    //         })\n    //     }\n    // }\n\n    saveUser = (createdUser) => {\n        return this.state.usersRefs.child(createdUser.user.uid).set({\n            name: createdUser.user.displayName,\n            email: createdUser.user.email,\n        })\n    }\n\n    isFormValid = () => {\n        let errors = []\n        let err\n\n        if (this.isFormEmpty(this.state)) {\n            err = { message: 'Vui Lòng Điền Đầy Đủ Thông Tin!' }\n            this.setState({\n                errors: errors.concat(err)\n            })\n            return false\n        } else if (this.isPasswordInvalid(this.state.password, this.state.repassword)) {\n            err = { message: 'Password không trùng!' }\n            this.setState({\n                errors: errors.concat(err)\n            })\n            return false\n        } else {\n            this.setState({\n                errors: []\n            })\n            return true\n        }\n    }\n\n    isPasswordInvalid = (password, repassword) => {\n        if (password !== repassword) {\n            return true\n        }\n    }\n\n    isFormEmpty = ({ username, email, password, repassword }) => {\n        return !username.length || !email.length || !password.length || !repassword.length\n    }\n    render() {\n        const { username, email, password, repassword } = this.state\n        const color = \"blue\"\n\n        return (\n            <div className='container'>\n                <Grid verticalAlign='middle' textAlign='center' className='register' >\n                    <Grid.Column style={{ maxWidth: 600 }}>\n                        <Header icon color={color} as='h2'>\n                            <Icon name='shield alternate' size='tiny' />Register With ShopAcc\n                    </Header>\n                        {this.state.isSuccess && (\n                            <Message color='green' content=\"Successsfully!\" />\n                        )}\n                        <Segment>\n                            <Form onSubmit={this.handleSunmit}>\n                                <Form.Input iconPosition='left' placeholder=\"Usernane\" icon='user' name='username' onChange={this.handleChange} value={username} type='text' />\n                                <Form.Input iconPosition='left' placeholder=\"Email\" icon='mail' name='email' onChange={this.handleChange} value={email} type='email' />\n                                <Form.Input iconPosition='left' placeholder=\"Password\" icon='lock' name='password' onChange={this.handleChange} value={password} type='password' />\n                                <Form.Input iconPosition='left' placeholder=\"Re-Password\" icon='undo' name='repassword' onChange={this.handleChange} value={repassword} type='password' />\n                                {this.state.errors.length > 0 && this.state.errors.map((err, index) => (<Message key={index} color='red' content={err.message} />))}\n                                <Button fluid color={color} loading={this.state.isLoading} disabled={this.state.isLoading}> Đăng kí </Button>\n                            </Form>\n                            <Message warning>\n                                <Icon name='help' />\n                                Bạn đăng kí rồi hã?<Link to='login'> Đăng Nhập Ngay</Link> nè.\n                         </Message>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Register\n","import React, { Component } from 'react'\nimport { Grid, Icon, Segment, Form, Message, Button, Header } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport './auth.css'\nimport firebase from '../../firebase'\nclass Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        errors: [],\n        isloading: false\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSunmit = (e) => {\n        e.preventDefault()\n        this.setState({\n            isloading: true\n        })\n        if (this.isFormValid()) {\n            let error = []\n            firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n                this.setState({\n                    isloading: false,\n                    errors: []\n                })\n            }).catch(err => {\n                let errs = { message: \"Sai thông tin tài khoản!\" }\n                this.setState({\n                    errors: error.concat(errs),\n                    isloading: false\n                })\n            })\n        }\n    }\n\n    isFormValid = () => {\n        return !this.isFormEmpty(this.state) ? true : false\n    }\n\n\n\n    isFormEmpty = ({ email, password }) => {\n        return !email.length || !password.length\n    }\n\n    render() {\n        const { email, password } = this.props\n        const color = \"green\"\n        return (\n            <div className='container'>\n                <Grid verticalAlign='middle' textAlign='center' className='login' >\n                    <Grid.Column style={{ maxWidth: 600 }}>\n                        <Header icon color={color} as='h2'>\n                            <Icon name='unlock' size='tiny' />Login to ShopAcc\n                        </Header>\n                        <Segment>\n                            <Form onSubmit={this.handleSunmit}>\n                                <Form.Input iconPosition='left' placeholder=\"Email\" icon='mail' name='email' onChange={this.handleChange} value={email} type='email' />\n                                <Form.Input iconPosition='left' placeholder=\"Password\" icon='lock' name='password' onChange={this.handleChange} value={password} type='password' />\n                                {this.state.errors.length > 0 && this.state.errors.map((err, index) => (<Message key={index} color='red' content={err.message} />))}\n                                <Button fluid color={color} loading={this.state.isloading} disabled={this.state.isloading}> Đăng Nhập </Button>\n                            </Form>\n                            <Message warning>\n                                <Icon name='help' />\n                                Bạn chưa đăng kí? <Link to='register'> Đăng kí ngay</Link>.\n                            </Message>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { Dropdown } from 'semantic-ui-react'\nimport firebase from '../../firebase'\nimport './Navbar.css'\nclass Navbar extends Component {\n\n    handleLogout = () => {\n        firebase.auth().signOut()\n    }\n    render() {\n\n        return (\n            <header className=\"f-between\">\n                <div className=\"logo\">\n                    <h1><Link to='/'>FindUr<span>Account</span></Link></h1>\n                </div>\n                <div className=\"nav\">\n                    <ul className=\"f-between\">\n                        <li><NavLink to='/login'>Đăng Nhập</NavLink></li>\n                        <li><NavLink to='/register'>Đăng Kí</NavLink></li>\n                        <Dropdown text='Chào, admin!'>\n                            <Dropdown.Menu>\n                                <Dropdown.Item text='Tài khoản' as={Link} to='/register'/>\n                                <Dropdown.Item text='Đăng xuất' onClick={this.handleLogout} />\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </ul>\n                </div>\n            </header >\n        )\n    }\n}\n\nexport default Navbar\n","import React, { Component } from 'react'\nimport Strapi from 'strapi-sdk-javascript/build/main'\nimport './Detail.css'\nimport { Header } from '../../../node_modules/semantic-ui-react';\nconst apiURL = process.env.API_URL || \"http://localhost:1337\"\nconst strapi = new Strapi(apiURL)\n\nclass Detail extends Component {\n\n    state = {\n        dichvu: '',\n        details: []\n    }\n\n\n    async componentDidMount() {\n        try {\n            const response = await strapi.request('POST', 'graphql', {\n                data: {\n                    query: `\n                    query {\n                        dichvu(id:\"${this.props.match.params.id}\"){\n                        _id\n                        name\n                        stock\n                        expired\n                        details {\n                          _id\n                          name\n                          image{\n                            url\n                          }\n                          price\n                          description\n                        }\n                      }\n                    }\n                    `\n                }\n            })\n            // console.log(response)\n            this.setState({\n                dichvu: response.data.dichvu,\n                details: response.data.dichvu.details\n            })\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n\n\n\n        return (\n            <React.Fragment>\n                {this.state.details.map(detail => (\n                    <div className=\"detail-area\">\n                        <div className=\"container\">\n                            <div className=\"top-detail flex\">\n                                <div className=\"main-image\">\n                                    <p><img src={`${apiURL}${detail.image.url}`} alt=\"\" /></p>\n                                </div>\n                                <div className=\"main-info\">\n                                    <Header as='h1' color='green' content={this.state.dichvu.name} />\n                                    <h4>Còn lại: {this.state.dichvu.stock}</h4>\n                                    <h4>Thời hạn: {this.state.dichvu.expired}</h4>\n                                    <h2>Giá : {detail.price} VNĐ</h2>\n                                </div>\n                            </div>\n                            <div className=\"description\">\n                                <Header as='h3' color='green' icon='idea' content='Giới thiệu' />\n                                <p>{detail.description}</p>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Detail\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.jsx';\nimport { BrowserRouter as Router, Switch, Route, withRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport Register from './components/Auth/Register';\nimport Login from './components/Auth/Login';\nimport 'semantic-ui-css/semantic.min.css'\nimport Navbar from './components/Header/Navbar';\nimport Detail from './components/Detail/Detail';\n// import { connect } from 'react-redux'\n\n\n\nclass Root extends React.Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='container'>\n                    <Navbar />\n                </div>\n                <Switch>\n                    <Route exact component={App} path='/' />\n                    <Route component={Register} path='/register' />\n                    <Route component={Login} path='/login' />\n                    <Route component={Detail} path='/:id' />\n                </Switch>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nconst RootWithAuth = withRouter(Root)\n\nReactDOM.render(\n        <Router>\n            <RootWithAuth />\n        </Router>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nif(module.hot){\n    module.hot.accept()\n}\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}