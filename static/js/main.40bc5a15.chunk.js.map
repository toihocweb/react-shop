{"version":3,"sources":["components/ListAccounts/Item.jsx","firebase.js","actions/index.js","actions/actionTypes.js","components/ListAccounts/Product.jsx","components/ListAccounts/Category.jsx","components/Footer/Footer.jsx","components/Header/Navbar.jsx","App/App.jsx","serviceWorker.js","components/Auth/Register.jsx","components/Auth/Login.jsx","components/Detail/Detail.jsx","components/Spinner/Spinner.js","components/AdminArea/Users.jsx","components/AdminArea/Services.jsx","components/AdminArea/Admin.jsx","reducers/index.js","components/Commit/Commit.jsx","index.js"],"names":["Item","_isMounted","state","isItemLoading","show","name","price","exprire","hiddenAlert","_this","setState","handleShow","renderProducts","_","map","props","list","product","key","newList","toLowerCase","includes","searchTerm","react_default","a","createElement","className","Link","to","concat","src","photoUrl","alt","Number","isInteger","onClick","_this2","this","setTimeout","react_spinners","color","size","margin","Fragment","lib_default","onEscapeKey","title","text","onConfirm","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","getProducts","dispatch","database","ref","on","snap","type","payload","val","Product","isLoading","dichvus","handleChange","e","target","value","filterBrands","filter","brand","Input","icon","loading","placeholder","onChange","ListAccounts_Item","productList","connect","Category","ListAccounts_Product","Footer","Navbar","handleLogout","auth","signOut","user","currentUser","Dropdown","Menu","isAdmin","history","push","match","url","withRouter","App","components_Header_Navbar","ListAccounts_Category","components_Footer_Footer","Boolean","window","location","hostname","Register","username","email","password","repassword","code","errors","isSuccess","usersRefs","Object","defineProperty","handleSunmit","preventDefault","isFormValid","createUserWithEmailAndPassword","then","createdUser","updateProfile","displayName","saveUser","console","log","catch","err","child","uid","set","isFormEmpty","message","isPasswordInvalid","isCodeInvalid","_ref","length","_this$state","Grid","verticalAlign","textAlign","Column","style","maxWidth","Header","as","Icon","Message","content","Segment","Form","onSubmit","iconPosition","index","Button","fluid","disabled","warning","Login","isloading","error","signInWithEmailAndPassword","_this$props","Detail","productRef","users","pass","getProductInfo","id","info","description","handleRandom","rd","uniqueRandom","idProduct","params","dangerouslySetInnerHTML","__html","Spinner","Dimmer","active","Loader","Users","userRef","saveUserDB","newUSer","renderUser","usersList","List","Content","deleteUser","getUsers","width","selection","remove","Services","file","storageRef","storage","idSelected","handleDes","addFile","filename","files","sendFile","put","snapshot","getDownloadURL","update","saveProduct","setIdSelected","addUserToProduct","handleUserDelete","renderProduct","deleteProduct","handleClear","react_quill_lib_default","Admin","divided","inverted","animated","NavLink","Switch","Route","component","path","initialUser","initialProduct","rootReducer","combineReducers","arguments","undefined","action","objectSpread","Commit","Root","onAuthStateChanged","setUser","clearUser","components_Spinner_Spinner","exact","React","store","createStore","composeWithDevTools","applyMiddleware","thunk","RootWithAuth","ReactDOM","render","es","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40bc5a15.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport _ from 'lodash'\r\nimport { GridLoader } from 'react-spinners'\r\nimport SweetAlert from 'sweetalert-react'; // eslint-disable-line import/no-extraneous-dependencies\r\nimport 'sweetalert/dist/sweetalert.css';\r\n\r\nclass Item extends Component {\r\n\r\n    _isMounted = false\r\n\r\n    state = {\r\n        isItemLoading: true,\r\n        show: false,\r\n        name: '',\r\n        price: '',\r\n        exprire: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true\r\n        setTimeout(() => {\r\n            if (this._isMounted) {\r\n                this.setState({\r\n                    isItemLoading: false\r\n                })\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n\r\n    hiddenAlert = () => {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    handleShow = (name, price) => () => {\r\n        this.setState({\r\n            show: true,\r\n            name,\r\n            price\r\n        })\r\n    }\r\n\r\n    renderProducts = () => {\r\n        return _.map(this.props.list, (product, key) => {\r\n            const newList = product.name.toLowerCase().includes(this.props.searchTerm.toLowerCase()) ? product : null\r\n            if (newList !== null) {\r\n                return (\r\n                    <div className=\"item\" key={key}>\r\n                        <Link to={`/${key}`}><img src={newList.photoUrl} alt=\"\" /></Link>\r\n                        <div className=\"info-account\">\r\n                            <h1 className=\"ttl\"><Link to={`/${key}`}>{newList.name}</Link></h1>\r\n                            {Number.isInteger(newList.exprire) ? (\r\n                                <span className=\"date\">Hạn: {newList.exprire} tháng</span>\r\n                            ) : (<span className=\"date\">Hạn: {newList.exprire}</span>)}\r\n\r\n                            <div className=\"acc-bot\">\r\n                                {newList.price !== '0' && (\r\n                                    <a className=\"buy\" onClick={this.handleShow(newList.name, newList.price)} >Mua !</a>\r\n                                )}\r\n                                <span className=\"price\">Giá: {`${newList.price}k`}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return this.state.isItemLoading ? <GridLoader className='loader' color='#4CAF50' size={25} margin=\"3px\" /> : (\r\n            <React.Fragment>\r\n                {this.renderProducts()}\r\n                <SweetAlert onEscapeKey={this.hiddenAlert} show={this.state.show} title=\"Thanh toán qua ví momo! tài khoản sẽ được gửi qua tin nhắn\" text={`Sdt: 0356678519 || Nội dung: ${this.state.name.toLowerCase()} || Giá: ${this.state.price}k`} onConfirm={this.hiddenAlert} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Item\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\n\r\n\r\n  var config = {\r\n    apiKey: \"AIzaSyAIoEjU91o6B9Q_qrq9z4TxwKGZBkwGQLA\",\r\n    authDomain: \"shopacc-c6b3d.firebaseapp.com\",\r\n    databaseURL: \"https://shopacc-c6b3d.firebaseio.com\",\r\n    projectId: \"shopacc-c6b3d\",\r\n    storageBucket: \"shopacc-c6b3d.appspot.com\",\r\n    messagingSenderId: \"265625106322\"\r\n  };\r\n  firebase.initializeApp(config);\r\n\r\n  export default firebase;","import * as actionTypes from './actionTypes'\r\nimport firebase from '../firebase'\r\n\r\n\r\nexport const setUser = user => {\r\n    return {\r\n        type: actionTypes.SET_USER,\r\n        payload: {\r\n            currentUser: user,\r\n            isAdmin : user.email === 'admin@gmail.com' ? true : false\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearUser = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_USER\r\n    }\r\n}\r\n\r\n\r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        firebase.database().ref(\"users\").on(\"value\", snap => {\r\n            dispatch({\r\n                type: actionTypes.GET_USERS,\r\n                payload: snap.val()\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveUser = (user) => {\r\n    return dispatch => firebase.database().ref(\"users\").push(user)\r\n}\r\n\r\nexport const deleteUser = (id) => {\r\n    return dispatch => firebase.database().ref(\"users\").child(id).remove()\r\n}\r\n\r\n\r\n//product\r\nexport const getProducts = () => {\r\n    return dispatch => {\r\n        firebase.database().ref(\"products\").on(\"value\", snap => {\r\n            dispatch({\r\n                type: actionTypes.GET_PRODUCTS,\r\n                payload: snap.val()\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const saveProduct = (product) => {\r\n    return dispatch => firebase.database().ref(\"products\").push(product)\r\n}\r\n\r\nexport const deleteProduct = (id) => {\r\n    return dispatch => firebase.database().ref(\"products\").child(id).remove()\r\n}\r\n\r\nexport const getUsersProduct = (id) => {\r\n    return dispatch => {\r\n         firebase.database().ref(\"products\").child(id).on('value' , snap => {\r\n            dispatch({\r\n                type: actionTypes.GET_USERS_PRODUCTS,\r\n                payload : snap.val()\r\n            })\r\n        })\r\n    }\r\n}\r\n","export const SET_USER = 'SET_USER'\r\nexport const CLEAR_USER = 'CLEAR_USER'\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS'\r\nexport const GET_USERS_PRODUCTS = 'GET_USERS_PRODUCTS'","import React, { Component } from 'react'\r\nimport Item from './Item';\r\nimport { Input } from 'semantic-ui-react'\r\nimport { getProducts } from '../../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Product extends Component {\r\n\r\n    state = {\r\n        searchTerm: '',\r\n        isLoading: false,\r\n        dichvus: []\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            searchTerm: e.target.value,\r\n            isLoading: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }, 500);\r\n    }\r\n\r\n\r\n    filterBrands = ( searchTerm, dichvus ) => {\r\n        return dichvus.filter(brand => {\r\n            return brand.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        })\r\n    }\r\n\r\n     componentDidMount() {\r\n\r\n            this.props.getProducts()\r\n        \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState({\r\n            isLoading : false\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"title f-between\">\r\n                    <h2>Danh Sách Tài Khoản ...</h2>\r\n                    <Input size='tiny' icon='search' loading={this.state.isLoading} placeholder='Search...' value={this.state.searchTerm} onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"list-accounts\">\r\n                    <Item list={this.props.product.productList} searchTerm={this.state.searchTerm}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    product: state.product\r\n})\r\n\r\n\r\nexport default (connect(mapStateToProps, { getProducts })(Product))","import React, { Component } from 'react'\r\nimport Product from './Product';\r\n\r\nclass Category extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Product />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Category\r\n","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <strong>@ I just write this text to let you know that, this's the footer!</strong>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport firebase from '../../firebase'\r\nimport './Navbar.css'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Navbar extends Component {\r\n\r\n    handleLogout = () => {\r\n        firebase.auth().signOut()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"f-between\">\r\n                <div className=\"logo\">\r\n                    <h1><Link to='/'>FindUr<span>Account</span></Link></h1>\r\n                </div>\r\n                {this.props.user.currentUser !== null ? (\r\n                    <div className=\"nav\">\r\n                        <ul className=\"f-between\">\r\n                            <Dropdown text='Welcome!'>\r\n                                <Dropdown.Menu>\r\n                                    {this.props.user.isAdmin &&\r\n                                        (<Dropdown.Item text='Admin' onClick={() => { this.props.history.push('/admin') }} />)\r\n                                    }\r\n                                    <Dropdown.Item text='Đăng xuất' onClick={this.handleLogout} />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </ul>\r\n                    </div>\r\n                ) : ( \r\n                        this.props.match.url === '/login' ? <Link to='/register'> Đăng kí </Link> : <Link to='/login'> Đăng nhập </Link>\r\n                    )}\r\n\r\n            </header >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(Navbar))\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Category from '../components/ListAccounts/Category';\r\nimport Footer from '../components/Footer/Footer';\r\nimport Navbar from '../components/Header/Navbar';\r\nclass App extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <Navbar />\r\n          <Category />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Grid, Header, Message, Segment, Icon, Form, Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../../firebase'\r\nimport Navbar from '../Header/Navbar';\r\nclass Register extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        repassword: '',\r\n        code : '',\r\n        errors: [],\r\n        isSuccess: false,\r\n        usersRefs : firebase.database().ref(\"/users\"),\r\n        isLoading: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSunmit = (e) => {\r\n        e.preventDefault()\r\n        if (this.isFormValid()) {\r\n            this.setState({ isLoading: true })\r\n            firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(createdUser => {\r\n                createdUser.user.updateProfile({\r\n                    displayName: this.state.username\r\n                }).then(() => { this.saveUser(createdUser) }).then(() => console.log(createdUser))\r\n                this.setState({\r\n                    username: '',\r\n                    email: '',\r\n                    password: '',\r\n                    repassword: '',\r\n                    code : '',\r\n                    errors: [],\r\n                    isSuccess: true,\r\n                    isLoading: false\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    errors: this.state.errors.concat(err),\r\n                    isLoading: false\r\n                })\r\n            })\r\n\r\n        }\r\n    }\r\n  \r\n    saveUser = (createdUser) => {\r\n        return this.state.usersRefs.child(createdUser.user.uid).set({\r\n            name: createdUser.user.displayName,\r\n            email: createdUser.user.email\r\n        })\r\n    }\r\n\r\n    isFormValid = () => {\r\n        let errors = []\r\n        let err\r\n\r\n        if (this.isFormEmpty(this.state)) {\r\n            err = { message: 'Vui Lòng Điền Đầy Đủ Thông Tin!' }\r\n            this.setState({\r\n                errors: errors.concat(err)\r\n            })\r\n            return false\r\n        } else if (this.isPasswordInvalid(this.state.password, this.state.repassword)) {\r\n            err = { message: 'Password không trùng!' }\r\n            this.setState({\r\n                errors: errors.concat(err)\r\n            })\r\n            return false\r\n        }  if (this.isCodeInvalid(this.state.code)) {\r\n            err = { message: 'code sai!' }\r\n            this.setState({\r\n                errors: errors.concat(err)\r\n            })\r\n            return false\r\n        } else {\r\n            this.setState({\r\n                errors: []\r\n            })\r\n            return true\r\n        }\r\n    }\r\n\r\n    isPasswordInvalid = (password, repassword) => {\r\n        if (password !== repassword) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    isCodeInvalid = (code) => {\r\n        if ( code !== \"CODE\" ){\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    isFormEmpty = ({ username, email, password, repassword, code }) => {\r\n        return !username.length || !email.length || !password.length || !repassword.length || !code.length\r\n    }\r\n    render() {\r\n        const { username, email, password, repassword, code } = this.state\r\n        const color = \"blue\"\r\n\r\n        return (\r\n            <div className='container'>\r\n                <Navbar />\r\n                <Grid verticalAlign='middle' textAlign='center' className='register' >\r\n                    <Grid.Column style={{ maxWidth: 600 }}>\r\n                        <Header icon color={color} as='h2'>\r\n                            <Icon name='shield alternate' size='tiny' />Register With FindUrAcc\r\n                    </Header>\r\n                        {this.state.isSuccess && (\r\n                            <Message color='green' content=\"Successsfully!\" />\r\n                        )}\r\n                        <Segment>\r\n                            <Form onSubmit={this.handleSunmit}>\r\n                                <Form.Input iconPosition='left' placeholder=\"Usernane\" icon='user' name='username' onChange={this.handleChange} value={username} type='text' />\r\n                                <Form.Input iconPosition='left' placeholder=\"Email\" icon='mail' name='email' onChange={this.handleChange} value={email} type='email' />\r\n                                <Form.Input iconPosition='left' placeholder=\"Password\" icon='lock' name='password' onChange={this.handleChange} value={password} type='password' />\r\n                                <Form.Input iconPosition='left' placeholder=\"Re-Password\" icon='undo' name='repassword' onChange={this.handleChange} value={repassword} type='password' />\r\n                                <Form.Input iconPosition='left' placeholder=\"Code\" icon='code' name='code' onChange={this.handleChange} value={code} type='text' />\r\n                                {this.state.errors.length > 0 && this.state.errors.map((err, index) => (<Message key={index} color='red' content={err.message} />))}\r\n                                <Button fluid color={color} loading={this.state.isLoading} disabled={this.state.isLoading}> Đăng kí </Button>\r\n                            </Form>\r\n                            <Message warning>\r\n                                <Icon name='help' />\r\n                                Bạn đăng kí rồi hã?<Link to='login'> Đăng Nhập Ngay</Link> nè.\r\n                         </Message>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React, { Component } from 'react'\r\nimport { Grid, Icon, Segment, Form, Message, Button, Header } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport './auth.css'\r\nimport firebase from '../../firebase'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Navbar from '../Header/Navbar'\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        errors: [],\r\n        isloading: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSunmit = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            isloading: true\r\n        })\r\n        if (this.isFormValid()) {\r\n            let error = []\r\n            firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\r\n                this.setState({\r\n                    isloading: false,\r\n                    errors: []\r\n                })\r\n                this.props.history.push('/')\r\n            }).catch(err => {\r\n                let errs = { message: \"Sai thông tin tài khoản!\" }\r\n                console.log(err.code)\r\n                this.setState({\r\n                    errors: error.concat(errs),\r\n                    isloading: false\r\n                })\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    isFormValid = () => {\r\n        return !this.isFormEmpty(this.state) ? true : false\r\n    }\r\n\r\n\r\n\r\n    isFormEmpty = ({ email, password }) => {\r\n        return !email.length || !password.length\r\n    }\r\n\r\n    render() {\r\n        const { email, password } = this.props\r\n        const color = \"green\"\r\n        return (\r\n            <div className='container'>\r\n                <Navbar />\r\n                <Grid verticalAlign='middle' textAlign='center' className='login' >\r\n                    <Grid.Column style={{ maxWidth: 600 }}>\r\n                        <Header icon color={color} as='h2'>\r\n                            <Icon name='unlock' size='tiny' />Login to FindUrAcc\r\n                        </Header>\r\n                        <Segment>\r\n                            <Form onSubmit={this.handleSunmit}>\r\n                                <Form.Input iconPosition='left' placeholder=\"Email\" icon='mail' name='email' onChange={this.handleChange} value={email} type='email' />\r\n                                <Form.Input iconPosition='left' placeholder=\"Password\" icon='lock' name='password' onChange={this.handleChange} value={password} type='password' />\r\n                                {this.state.errors.length > 0 && this.state.errors.map((err, index) => (<Message key={index} color='red' content={err.message} />))}\r\n                                <Button fluid color={color} loading={this.state.isloading} disabled={this.state.isloading}> Đăng Nhập </Button>\r\n                            </Form>\r\n                            <Message warning>\r\n                                <Icon name='help' />\r\n                                Bạn chưa đăng kí? <Link to='register'> Đăng kí ngay</Link>.\r\n                            </Message>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login)\r\n","import React, { Component } from 'react'\r\nimport './Detail.css'\r\nimport { Input, Button } from 'semantic-ui-react';\r\nimport Navbar from '../Header/Navbar';\r\nimport firebase from '../../firebase'\r\nimport uniqueRandom from 'unique-random'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nclass Detail extends Component {\r\n    _isMounted = false\r\n    state = {\r\n        productRef: firebase.database().ref('products'),\r\n        name: '',\r\n        photoUrl: '',\r\n        users: [],\r\n        user: '',\r\n        pass: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true\r\n        if (this._isMounted) {\r\n            const idProduct = this.props.match.params.id\r\n            this.getProductInfo(idProduct)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    getProductInfo = (id) => {\r\n        this.state.productRef.child(id).on('value', snap => {\r\n            let info = snap.val()\r\n            this.setState({\r\n                name: info.name,\r\n                photoUrl: info.photoUrl,\r\n                description: info.description,\r\n                users: info.users,\r\n            })\r\n        })\r\n    }\r\n\r\n    handleRandom = () => {\r\n        if (this.state.users) {\r\n            let rd = uniqueRandom(0, this.state.users.length - 1)()\r\n            this.setState({\r\n                user: this.state.users[rd].user,\r\n                pass: this.state.users[rd].pass\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { name, photoUrl, description, users, user, pass } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <Navbar />\r\n                    <div className=\"detail-area\">\r\n                        <div className=\"detail-top\">\r\n                            <p><img src={photoUrl} alt=\"img\" /></p>\r\n                            <div className=\"detail-info\">\r\n                                <h1>{name} <Button content={users ? `Số lượng: ${users.length}` : `Số lượng: 0`} color='teal' /></h1>\r\n                                {(this.props.user.currentUser !== null || name.includes('free')) && (\r\n                                    <React.Fragment>\r\n                                        <Input icon='user' iconPosition='left' placeholder='Username' className='detail-user' value={user} />\r\n                                        <Input icon='lock' iconPosition='left' placeholder='Password' value={pass} />\r\n                                        <Button color='red' className='random' content='Random' onClick={this.handleRandom} />\r\n                                    </React.Fragment>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"description\">\r\n                            <h2>Mô tả</h2>\r\n                            <div dangerouslySetInnerHTML={{ __html: description }}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStatetoProps, null)(Detail)\r\n","import React from 'react'\r\nimport { Loader, Dimmer } from 'semantic-ui-react'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Dimmer active>\r\n    <Loader size='huge' content={\"Preparing...\"} />\r\n</Dimmer>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Component } from 'react'\r\nimport { Grid, List, Icon, Form, Segment, Button, Message } from 'semantic-ui-react';\r\nimport firebase from '../../firebase'\r\nimport { connect } from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { getUsers, saveUser, deleteUser } from '../../actions'\r\nclass Users extends Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        repassword: '',\r\n        errors: [],\r\n        isSuccess: false,\r\n        isLoading: false,\r\n        users: [],\r\n        userRef: firebase.database().ref(\"/users\")\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers()\r\n    }\r\n\r\n    handleSunmit = (e) => {\r\n        e.preventDefault()\r\n        if (this.isFormValid()) {\r\n            this.setState({ isLoading: true })\r\n            firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(createdUser => {\r\n                createdUser.user.updateProfile({\r\n                    displayName: this.state.username,\r\n                }).then(() => { this.saveUserDB(createdUser) }).then(() => console.log(createdUser))\r\n                this.setState({\r\n                    username: '',\r\n                    email: '',\r\n                    password: '',\r\n                    repassword: '',\r\n                    errors: [],\r\n                    isLoading: false,\r\n                    isSuccess: true\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    errors: this.state.errors.concat(err),\r\n                    isLoading: false\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    saveUserDB = (createdUser) => {\r\n        const newUSer = {\r\n            name: createdUser.user.displayName,\r\n            email: createdUser.user.email\r\n        }\r\n        this.props.saveUser(newUSer)\r\n    }\r\n\r\n\r\n\r\n    isFormValid = () => {\r\n        let errors = []\r\n        let err\r\n\r\n        if (this.isFormEmpty(this.state)) {\r\n            err = { message: 'Vui Lòng Điền Đầy Đủ Thông Tin!' }\r\n            this.setState({\r\n                errors: errors.concat(err)\r\n            })\r\n            return false\r\n        } else if (this.isPasswordInvalid(this.state.password, this.state.repassword)) {\r\n            err = { message: 'Password không trùng!' }\r\n            this.setState({\r\n                errors: errors.concat(err)\r\n            })\r\n            return false\r\n        } else {\r\n            this.setState({\r\n                errors: []\r\n            })\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    isPasswordInvalid = (password, repassword) => {\r\n        if (password !== repassword) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    isFormEmpty = ({ username, email, password, repassword }) => {\r\n        return !username.length || !email.length || !password.length || !repassword.length\r\n    }\r\n\r\n    renderUser = () => {\r\n        return _.map(this.props.user.usersList, (user, key) => {\r\n            return (\r\n                <List.Item key={key}>\r\n                    <List.Content>\r\n                        <List.Header className='item-user'>\r\n                            <h5>{user.name}</h5>\r\n                            <Icon className='edit' name='edit' />\r\n                            <Icon onClick={() => this.props.deleteUser(key)} name='delete' />\r\n                        </List.Header>\r\n                    </List.Content>\r\n                </List.Item>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { username, email, password, repassword } = this.state\r\n        return (\r\n            <Grid className='ad-register' >\r\n                <Grid.Column textAlign='center' width={8} >\r\n                    {this.state.isSuccess && (\r\n                        <Message color='green' content=\"Successsfully!\" />\r\n                    )}\r\n                    <Segment>\r\n                        <Form onSubmit={this.handleSunmit}>\r\n                            <Form.Input iconPosition='left' placeholder=\"Usernane\" icon='user' name='username' onChange={this.handleChange} value={username} type='text' />\r\n                            <Form.Input iconPosition='left' placeholder=\"Email\" icon='mail' name='email' onChange={this.handleChange} value={email} type='email' />\r\n                            <Form.Input iconPosition='left' placeholder=\"Password\" icon='lock' name='password' onChange={this.handleChange} value={password} type='password' />\r\n                            <Form.Input iconPosition='left' placeholder=\"Re-Password\" icon='undo' name='repassword' onChange={this.handleChange} value={repassword} type='password' />\r\n                            {this.state.errors.length > 0 && this.state.errors.map((err, index) => (<Message key={index} color='red' content={err.message} />))}\r\n                            <Button fluid color='green' loading={this.state.isLoading} disabled={this.state.isLoading}> Submit</Button>\r\n                        </Form>\r\n                    </Segment>\r\n                </Grid.Column>\r\n                <Grid.Column width={8} >\r\n                    <Segment>\r\n                        <List selection>\r\n                            <List.Header content='List User' as='h2' />\r\n                            {this.renderUser()}\r\n                        </List>\r\n                    </Segment>\r\n                </Grid.Column>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\n\r\nexport default (connect(mapStateToProps, { getUsers, saveUser, deleteUser })(Users))\r\n","import React, { Component } from 'react'\r\nimport { Grid, Form, Segment, Button, Message, List, Icon } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux'\r\nimport firebase from '../../firebase'\r\nimport { getProducts, saveProduct, deleteProduct } from '../../actions'\r\nimport _ from 'lodash'\r\nimport ReactQuill from 'react-quill'; // ES6\r\nimport 'react-quill/dist/quill.snow.css'; // ES6\r\n\r\n\r\n\r\nclass Services extends Component {\r\n\r\n  state = {\r\n    title: '',\r\n    price: '',\r\n    exprire : '',\r\n    errors: [],\r\n    file: null,\r\n    description: '',\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    storageRef: firebase.storage().ref(),\r\n    productRef: firebase.database().ref('products'),\r\n    url: '',\r\n    idSelected: '',\r\n    users: [\r\n      {\r\n        name: '',\r\n        pass: ''\r\n      }\r\n    ],\r\n    user: '',\r\n    pass: ''\r\n  }\r\n\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleDes = description => {\r\n    this.setState({\r\n      description\r\n    })\r\n  }\r\n\r\n  addFile = (e) => {\r\n    const filename = e.target.files[0]\r\n    this.setState({\r\n      file: filename\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  sendFile = (id) => {\r\n    const { file } = this.state\r\n    const storage = firebase.storage()\r\n\r\n    if (file) {\r\n\r\n      this.setState({ isLoading: true })\r\n\r\n      const uploadTask = storage.ref(`images/${file.name}`).put(file)\r\n      uploadTask.on('state_changed', (snapshot) => {\r\n      }, (err) => {\r\n        console.error(err)\r\n      }, () => {\r\n        storage.ref('images').child(file.name).getDownloadURL().then((url) => this.setState({ url })).then(() => {\r\n          if (id !== '') {\r\n            this.state.productRef.child(id).update({\r\n              name: this.state.title,\r\n              photoUrl: this.state.url,\r\n              price: this.state.price,\r\n              exprire : this.state.exprire,\r\n              description: this.state.description,\r\n            })\r\n          } else {\r\n            this.props.saveProduct({\r\n              name: this.state.title,\r\n              photoUrl: this.state.url,\r\n              price: this.state.price,\r\n              exprire : this.state.exprire,\r\n              description: this.state.description,\r\n              users: this.state.users\r\n            })\r\n          }\r\n        }).then(() => {\r\n          this.setState({\r\n            isLoading: false,\r\n            idSelected: '',\r\n            title: '',\r\n            price: '',\r\n            exprire:'',\r\n            description: '',\r\n            file: null,\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSunmit = (e) => {\r\n    e.preventDefault()\r\n    this.sendFile(this.state.idSelected)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProducts()\r\n  }\r\n\r\n\r\n  setIdSelected = (id) => () => {\r\n    this.state.productRef.child(id).on('value', snap => {\r\n      const info = snap.val()\r\n      this.setState({\r\n        idSelected: id,\r\n        title: info.name,\r\n        file: null,\r\n        price: info.price,\r\n        exprire : info.exprire,\r\n        description: info.description,\r\n        users: info.users\r\n      })\r\n    })\r\n  }\r\n\r\n  addUserToProduct = (id) => () => {\r\n    this.state.productRef.child(id).update({\r\n      users: this.state.users.concat({\r\n        user: this.state.user,\r\n        pass: this.state.pass\r\n      })\r\n    })\r\n    this.setState({\r\n      user: '',\r\n      pass: ''\r\n    })\r\n  }\r\n\r\n  handleUserDelete = (id) => () => {\r\n    const newList = this.state.users.filter((user, key) => key !== id)\r\n    this.setState({\r\n      users: newList\r\n    })\r\n    this.state.productRef.child(this.state.idSelected).update({\r\n      users: newList\r\n    })\r\n  }\r\n\r\n\r\n  renderProduct = () => {\r\n    return _.map(this.props.product.productList, (product, key) => {\r\n      return (\r\n        <List.Item key={key}>\r\n          <List.Content>\r\n            <List.Header className='item-user'>\r\n              <h5>{product.name}</h5>\r\n              <Icon className='edit' name='edit' onClick={this.setIdSelected(key)} />\r\n              <Icon onClick={() => this.props.deleteProduct(key)} name='delete' />\r\n            </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderUser = () => {\r\n    return _.map(this.state.users, (user, key) => {\r\n      return (\r\n        <List.Item key={key}>\r\n          <List.Content>\r\n            <List.Header className='item-product-user'>\r\n              <h5>{user.user}</h5>\r\n              <Icon onClick={this.handleUserDelete(key)} className='del' name='delete' />\r\n            </List.Header>\r\n          </List.Content>\r\n        </List.Item>\r\n      )\r\n    })\r\n  }\r\n\r\n  handleClear = () => {\r\n    this.setState({\r\n      idSelected: '',\r\n      title: '',\r\n      price: '',\r\n      exprire:'',\r\n      description: '',\r\n      file: null,\r\n      users: [\r\n        {\r\n          name: '',\r\n          pass: ''\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { title, price, exprire,isSuccess, isLoading, description, user, pass } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid className='ad-register' >\r\n          <Grid.Column textAlign='center' width={8} >\r\n            {isSuccess && (\r\n              <Message color='green' content=\"Successsfully!\" />\r\n            )}\r\n            <Segment>\r\n              <Form onSubmit={this.handleSunmit}>\r\n                <Form.Input iconPosition='left' placeholder=\"Title\" icon='bug' name='title' onChange={this.handleChange} value={title} type='text' />\r\n                <Form.Input fluid type='file' name='file' onChange={this.addFile} />\r\n                <Form.Input iconPosition='left' placeholder=\"Price\" icon='money' name='price' onChange={this.handleChange} value={price} type='number' />\r\n                <Form.Input iconPosition='left' placeholder=\"Exprire\" icon='time' name='exprire' onChange={this.handleChange} value={exprire} type='text' />\r\n                {/* <Form.TextArea rows={5} placeholder=\"Description\" name='description' onChange={this.handleChange} value={description} /> */}\r\n                <ReactQuill value={description} onChange={this.handleDes} />\r\n                {this.state.errors.length > 0 && this.state.errors.map((err, index) => (<Message key={index} color='red' content={err.message} />))}\r\n\r\n                <div className=\"f-between\">\r\n                  <Button color='green' loading={isLoading} disabled={isLoading}> Submit </Button>\r\n                  <Button onClick={this.handleClear}> Clear </Button>\r\n                </div>\r\n              </Form>\r\n            </Segment>\r\n\r\n            <Segment>\r\n              <Form>\r\n                <Form.Input disabled={!this.state.idSelected} iconPosition='left' placeholder=\"User\" icon='user' name='user' onChange={this.handleChange} value={user} type='text' />\r\n                <Form.Input disabled={!this.state.idSelected} iconPosition='left' placeholder=\"Password\" icon='lock' name='pass' onChange={this.handleChange} value={pass} type='text' />\r\n                <Form.Button fluid content='Add User' color='blue' onClick={this.addUserToProduct(this.state.idSelected)} />\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column width={8} >\r\n            <Segment>\r\n              <List selection>\r\n                <List.Header content='List Products' as='h2' />\r\n                {this.renderProduct()}\r\n              </List>\r\n            </Segment>\r\n\r\n            <Segment>\r\n              <List selection>\r\n                <List.Header content='List Users' as='h2' />\r\n                {this.renderUser()}\r\n              </List>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n\r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  product: state.product\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProducts, saveProduct, deleteProduct })(Services)\r\n","import React, { Component } from 'react'\r\nimport './Admin.css'\r\nimport { Header, List } from 'semantic-ui-react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom'\r\nimport Users from './Users';\r\nimport Services from './Services';\r\nclass Admin extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"ad\">\r\n                    <div className=\"sidebar\">\r\n                        <Header size='large' className='sb-header' icon='adn' content='Admin' color='green' onClick={() => { this.props.history.push('/') }} />\r\n                        <List divided inverted animated>\r\n                            <List.Item>\r\n                                <List.Icon name='users' />\r\n                                <List.Content>\r\n                                    <List.Header as={NavLink} to='/admin/users'>Users</List.Header>\r\n                                </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                                <List.Icon name='servicestack' />\r\n                                <List.Content>\r\n                                    <List.Header as={NavLink} to='/admin/services'>Services</List.Header>\r\n                                </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                                <List.Icon name='log out' />\r\n                                <List.Content>\r\n                                    <List.Header as='a'>Logout</List.Header>\r\n                                </List.Content>\r\n                            </List.Item>\r\n                        </List>\r\n                    </div>\r\n                    <div className=\"ad-content\">\r\n                        <Header  size='large' color='pink'>Welcome to Admin Panel!</Header>\r\n                        <Switch>\r\n                            <Route component={Users} path='/admin/users' />\r\n                            <Route component={Services} path='/admin/services' />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Admin\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst initialUser = {\r\n    currentUser : null,\r\n    isLoading : true,\r\n    usersList : null,\r\n    isAdmin : false\r\n}\r\n\r\nconst user_reducer = (state = initialUser , action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                currentUser :  action.payload.currentUser,\r\n                isLoading : false,\r\n                isAdmin : action.payload.isAdmin\r\n            }\r\n        case actionTypes.CLEAR_USER:\r\n            return {\r\n                ...initialUser,\r\n                isLoading : false\r\n            }\r\n        case actionTypes.GET_USERS:\r\n        return {\r\n            ...initialUser,\r\n            isLoading : false,\r\n            usersList : action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initialProduct = {\r\n    productList : null,\r\n}\r\n\r\nconst product_reducer = (state = initialProduct , action) => {\r\n    switch(action.type){\r\n        case actionTypes.GET_PRODUCTS:\r\n            return {\r\n                productList : action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user : user_reducer,\r\n    product : product_reducer\r\n})\r\n\r\nexport default rootReducer\r\n","import React, { Component } from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\n\r\nclass Commit extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Segment>\r\n            \r\n        </Segment>\r\n      </div>\r\n    )   \r\n  }\r\n}\r\n\r\nexport default Commit\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App.jsx';\r\nimport { BrowserRouter as Router, Switch, Route, withRouter } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Register from './components/Auth/Register';\r\nimport Login from './components/Auth/Login';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport Detail from './components/Detail/Detail';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider, connect } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { clearUser, setUser } from './actions'\r\nimport firebase from 'firebase'\r\nimport Spinner from './components/Spinner/Spinner'\r\nimport Admin from './components/AdminArea/Admin'\r\nimport rootReducer from './reducers'\r\nimport Users from './components/AdminArea/Users';\r\nimport Services from './components/AdminArea/Services';\r\nimport Commit from './components/Commit/Commit';\r\n\r\nclass Root extends React.Component {\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.props.setUser(user)\r\n            } else {\r\n                this.props.clearUser()\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n    //   \r\n    render() {\r\n        return this.props.user.isLoading ? <Spinner /> : (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route exact component={App} path='/' />\r\n                    <Route component={Register} path='/register' />\r\n                    <Route component={Login} path='/login' />\r\n                    <Route component={Admin} path='/admin' />)}/>\r\n                    <Route component={Commit} path='/commit' />)}/>\r\n                    <Route component={Detail} path='/:id' />)}/>\r\n                    <Switch>\r\n                        <Route component={Users} path='/admin/users' />\r\n                        <Route component={Services} path='/admin/services' />\r\n                    </Switch>\r\n                </Switch>   \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nconst mapStateFromProps = state => ({\r\n    // isLoading: state.user.isLoading,\r\n    user : state.user\r\n})\r\n\r\nconst RootWithAuth = withRouter(connect(mapStateFromProps, { setUser, clearUser })(Root))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <RootWithAuth />\r\n        </Router>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\nif (module.hot) {\r\n    module.hot.accept()\r\n}\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}